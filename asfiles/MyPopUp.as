/** * <p>Original Author: Daniel Freeman</p> * * <p>Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions:</p> * * <p>The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software.</p> * * <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS' OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE.</p> * * <p>Licensed under The MIT License</p> * <p>Redistributions of files must retain the above copyright notice.</p> */package asfiles {		import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.geom.Point;	import flash.utils.Timer;			public class MyPopUp extends Sprite {				public static const VISIBLE:String="MyPopUp.visible";				public var popup:Sprite;		private var delay:Timer = new Timer(100, 1);		private var hint:String;		private var dontmove:Boolean;		public var isvisible:Boolean=false;				public function clear():void{					}				public function MyPopUp(screen:Sprite,xx:int,yy:int,popup:Sprite,hint:String=null,dontmove:Boolean=false) {			if (screen!=null) screen.addChild(this);			this.hint=hint;x=xx;y=yy;this.dontmove=dontmove;			this.popup=popup;buttonMode=useHandCursor=true;			redraw();			addEventListener(MouseEvent.MOUSE_DOWN,mousedown);			addEventListener(MouseEvent.MOUSE_OVER,mouseover);			addEventListener(MouseEvent.MOUSE_OUT,mouseout);			delay.addEventListener(TimerEvent.TIMER_COMPLETE,invisible);		}						public function redraw(colour : uint = 0):void {			graphics.clear();			graphics.lineStyle(1,0xffdfb0);			graphics.beginFill(0,0);			graphics.drawRect(0,0,10,10);		}						public function showpopup():void {			addEventListener(MouseEvent.MOUSE_UP,mouseup);			addEventListener(MouseEvent.MOUSE_OUT,mouseup);			Cursor.infront(stage,popup,localToGlobal(new Point(0,height)),dontmove);			isvisible=true;		}						public function mousedown(ev:*):void {			addEventListener(MouseEvent.MOUSE_UP,mouseup);			addEventListener(MouseEvent.MOUSE_OUT,mouseup);			if (stage!=null) {				if (hint!=null) Cursor.delayhint(stage);				if (popup && popup.parent!=null && popup.visible) {Cursor.infront(stage);isvisible=false;}				else {Cursor.infront(stage,popup,localToGlobal(new Point(0,height)),dontmove);isvisible=true;}			}			dispatchEvent(new MyEvent(VISIBLE,isvisible));		}						private function mouseup(ev:MouseEvent):void {			removeEventListener(MouseEvent.MOUSE_UP,mouseup);			removeEventListener(MouseEvent.MOUSE_OUT,mouseup);			if (stage!=null) stage.addEventListener(MouseEvent.MOUSE_UP,stagemouseup);		}						private function mouseover(ev:MouseEvent):void {			if (stage!=null && hint!=null) Cursor.delayhint(stage,hint);		}						private function mouseout(ev:MouseEvent):void {			if (stage!=null && hint!=null) Cursor.delayhint(stage);		}						public function stagemouseup(ev:MouseEvent):void {			if (ev.target==null || (ev.target!=this && ev.target.parent!=this)) {				delay.reset();delay.start();				if (stage!=null) stage.removeEventListener(MouseEvent.MOUSE_UP,stagemouseup);			}		}						public function invisible(ev:TimerEvent):void {			if (stage!=null && popup && popup.parent!=null && popup.visible) {Cursor.infront(stage);isvisible=false;}			dispatchEvent(new MyEvent(VISIBLE,false));		}						public function newcolour(colour:uint):void		{			graphics.clear();			graphics.lineStyle(1,0xffdfb0);			graphics.beginFill(colour);			graphics.drawRect(0,0,10,10);		}			}	}