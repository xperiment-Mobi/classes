/** * <p>Original Author: Daniel Freeman</p> * * <p>Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions:</p> * * <p>The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software.</p> * * <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS' OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE.</p> * * <p>Licensed under The MIT License</p> * <p>Redistributions of files must retain the above copyright notice.</p> */package asfiles {		import flash.display.Sprite;	import flash.events.MouseEvent;	import flash.filters.BevelFilter;	import flash.filters.DropShadowFilter;	import com.danielfreeman.madcomponents.Colour;			public class HBar extends GraphShape {				private const bw:Number=0.90;		private var h:int;		private var fval:Number;			public function HBar(screen:Sprite) {			super(screen);		}		public function drawbar(wdth:Number,hght:Number,cell:Cell,soffset:Number,xx:int,c:uint,threed:Boolean=false,stack:Boolean=false,top:Boolean=false,fval:int=-1,flabel:String=''):void {			var valu:String=(cell!=null) ? cell.text : '0';			var myfilters:Array=new Array();			if ((this.fval=fval)<0) h=Math.round(wdth*((cell!=null && cell.isvalue) ? cell.value : 0));			else {h=Math.round(wdth*fval);this.flabel=flabel+': '+fval;}			y=xx*hght;x=soffset;this.cell=cell;colour=c;			graphics.clear();			graphics.beginFill(c);			graphics.lineStyle(0,Colour.darken(c));			graphics.drawRect(0,0,h,bw*hght);						if (threed) {				myfilters.push(new BevelFilter(bw*hght/4,90,0xffffff,0.6,0x000000,0.6));           		myfilters.push(new DropShadowFilter(2.0,45,0x999999));				filters=myfilters;			} else filters=null;		}		}}