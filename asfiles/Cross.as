/** * <p>Original Author: Daniel Freeman</p> * * <p>Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions:</p> * * <p>The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software.</p> * * <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS' OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE.</p> * * <p>Licensed under The MIT License</p> * <p>Redistributions of files must retain the above copyright notice.</p> */package asfiles {		import flash.display.Sprite;	import flash.events.MouseEvent;	import com.danielfreeman.madcomponents.Colour;			public class Cross extends GraphShape {				private var bw:Number;		private var wdth:int,h:int;			public function Cross(screen:Sprite) {			super(screen);		}		public function drawcross(wdth:Number,hght:Number, cell:Cell,soffset:Number,xx:int,c:uint,threed:Boolean=false,stack:Boolean=false,top:Boolean=false):void {			h=-Math.round(hght*((cell!=null && cell.isvalue) ? cell.value : 0));			x=xx*wdth;y=soffset;this.cell=cell;colour=c;			bw=0.7;		//	bw=0.7; if (threed && !stack) bw=0.6;		//	else if (stack && !threed) bw=bw+0.05;		//	if (threed) thick=bw*wdth/3; else thick=0; if (thick>8) thick = 8;trace('DRAWBAR thick='+thick);			this.wdth=wdth;		//	setsizes(this.wdth=wdth,threed,stack);		//	graphics.clear();		//	graphics.beginFill(c);		//	graphics.lineStyle(0,Colour.darken(c));		//	graphics.drawRect(0,0,bw*wdth,h);			cross(bw*wdth,h,c);		}								private function cross(xx:int,yy:int,colour:uint,size:int=5,wdth:int=2):void {			graphics.clear();			graphics.lineStyle(1,Colour.darken(colour));			graphics.beginFill(colour);			graphics.moveTo(xx+size,yy+size-wdth);			graphics.lineTo(xx+size-wdth,yy+size);			graphics.lineTo(xx,yy+wdth);			graphics.lineTo(xx-size+wdth,yy+size);			graphics.lineTo(xx-size,yy+size-wdth);			graphics.lineTo(xx-wdth,yy);			graphics.lineTo(xx-size,yy-size+wdth);			graphics.lineTo(xx-size+wdth,yy-size);			graphics.lineTo(xx,yy-wdth);			graphics.lineTo(xx+size-wdth,yy-size);			graphics.lineTo(xx+size,yy-size+wdth);			graphics.lineTo(xx+wdth,yy);			graphics.lineTo(xx+size,yy+size-wdth);		}		}}