/** * <p>Original Author: Daniel Freeman</p> * * <p>Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions:</p> * * <p>The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software.</p> * * <p>THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS' OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE.</p> * * <p>Licensed under The MIT License</p> * <p>Redistributions of files must retain the above copyright notice.</p> */package asfiles {		import flash.display.Sprite;	import flash.ui.Mouse;	import flash.events.MouseEvent;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import com.danielfreeman.madcomponents.Colour;		public class Segment extends GraphShape {				private const increment:Number=0.1;		private const qx:Number=0.95;		private const qy:Number=1.1;				private var offsetx:int;		private var offsety:int;		private var radiusx:int;		private var radiusy:int;				private var fval:Number;				public function Segment(screen:Sprite) {			super(screen);		}						private function cellvalue(cell:Cell):Number {			if (fval>=0) return fval;			else if (cell==null) return 0; else if (isNaN(cell.value)) return 0; else return cell.value;		}						public function plotseg(wdth:int,hght:int,c:uint,lastposn:Number,cell:Cell,share:Number,threed:Boolean,fval:int=-1,flabel:String=''):Number {			if ((this.fval=fval)>=0) this.flabel=flabel+': '+this.fval;			var posn:Number=lastposn+share*cellvalue(cell);						this.cell=cell;												graphics.clear();						offsetx=wdth/2;			if (threed) {				offsety=hght/3;				radiusx=3*hght/4;				radiusy=hght/3;				if (radiusx>wdth/2) {radiusx=wdth/2;radiusy=4*radiusx/9;}				if ((lastposn>=Math.PI/2 && lastposn<=3*Math.PI/2) || (posn>=Math.PI/2 && posn<=3*Math.PI/2) || (lastposn<Math.PI/2 && posn>3*Math.PI/2)) plot3dseg(lastposn,posn,c,radiusy);			} else {				offsety=hght/2;				radiusx=radiusy=Math.min(wdth,hght)/2;			}			graphics.beginFill(colour=c);			graphics.lineStyle(0,Colour.darken(colour));			graphics.moveTo(offsetx,offsety);			graphics.lineTo(offsetx+radiusx*Math.sin(lastposn),offsety-radiusy*Math.cos(lastposn));			for (var j:Number=lastposn;j<posn;j+=increment) graphics.lineTo(offsetx+radiusx*Math.sin(j),offsety-radiusy*Math.cos(j));			graphics.lineTo(offsetx+radiusx*Math.sin(posn),offsety-radiusy*Math.cos(posn));			graphics.endFill();						return posn;		}			private function plot3dseg(lastposn:Number,posn:Number,c:uint,tall:int):void {						if (lastposn<Math.PI/2) lastposn=Math.PI/2;			if (posn>3*Math.PI/2) posn=3*Math.PI/2;			graphics.beginFill(Colour.darken(colour=c));			graphics.lineStyle(0,Colour.darken(colour,-100));			graphics.moveTo(offsetx+radiusx*Math.sin(lastposn),offsety-radiusy*Math.cos(lastposn));			for (var i:Number=lastposn;i<posn;i+=increment) graphics.lineTo(offsetx+radiusx*Math.sin(i),offsety-radiusy*Math.cos(i));			graphics.lineTo(offsetx+radiusx*Math.sin(posn),offsety-radiusy*Math.cos(posn));			graphics.lineTo(offsetx+qx*radiusx*Math.sin(posn),tall+offsety-qy*radiusy*Math.cos(posn));			for (var j:Number=posn;j>lastposn;j-=increment) graphics.lineTo(offsetx+qx*radiusx*Math.sin(j),tall+offsety-qy*radiusy*Math.cos(j));			graphics.lineTo(offsetx+qx*radiusx*Math.sin(lastposn),tall+offsety-qy*radiusy*Math.cos(lastposn));			graphics.endFill();		}	}}